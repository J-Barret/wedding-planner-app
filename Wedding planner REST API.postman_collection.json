{
	"info": {
		"_postman_id": "40f97c0a-011b-43fc-a14f-3f04e96e032f",
		"name": "Wedding planner REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32874571"
	},
	"item": [
		{
			"name": "Login tests",
			"item": [
				{
					"name": "/deleteUser make sure user does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/deleteUser",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"deleteUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "/deleteUser try to delete non existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Username not found\"] = jsonData.message === 'Username not found.';\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"tests[\"Status code is 400\"] = responseCode.code === 400;\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/deleteUser",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"deleteUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"User created successfully\"] = jsonData.message === 'User created succesfully.';\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/register",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register already exists user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Username already exists. Please try another one\"] = jsonData.message === 'Username already exists. Please try another one.';\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"tests[\"Status code is 400\"] = responseCode.code === 400;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/register",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/login fail - wrong user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Wrong username\"] = jsonData.message === 'Username not found.';\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"tests[\"Status code is 400\"] = responseCode.code === 400;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"bwhqwhbh\",\r\n    \"password\": \"password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/login",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/login fail - wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Wrong password\"] = jsonData.message === 'Wrong password.';\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"tests[\"Status code is 400\"] = responseCode.code === 400;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"wecgfniuqcnqoict\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/login",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/login login success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);\r",
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\");\r",
									"tests[\"Body contains refresh_token\"] = responseBody.has(\"refresh_token\");\r",
									"\r",
									"tests[\"Response time is less than 150ms\"] = responseTime < 150;\r",
									"\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/login",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/refresh refresh success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\");\r",
									"\r",
									"tests[\"Response time is less than 150ms\"] = responseTime < 150;\r",
									"\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{refresh_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{local_url}}/refresh",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "/logout logout success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"tests[\"Successfully logged out\"] = jsonData.message === 'Successfully logged out';\r",
									"\r",
									"tests[\"Response time is less than 150ms\"] = responseTime < 150;\r",
									"\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{local_url}}/logout",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"password1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local_url}}/register",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "/deleteUser",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"password1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local_url}}/deleteUser",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"deleteUser"
					]
				}
			},
			"response": []
		},
		{
			"name": "/login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"name1\",\r\n    \"password\": \"password1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local_url}}/login",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/refresh",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcxMjgyMTI2NiwianRpIjoiMzllNmY0MmUtODMxMy00MThhLThmYWUtMTBmZTk0OGFjODc1IiwidHlwZSI6InJlZnJlc2giLCJzdWIiOjMsIm5iZiI6MTcxMjgyMTI2NiwiY3NyZiI6ImZiZDM4ZjY4LTEyOGItNDY2Yy1hYzk3LWQ2NjIwYjUxNDFmMyIsImV4cCI6MTcxNTQxMzI2Nn0.4Ylvohx2AGghnxqhTGMDWMAfdvnmp4O6t8e15wbh4jA",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{local_url}}/refresh",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "/logout",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{local_url}}/logout",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "/upload",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6dHJ1ZSwiaWF0IjoxNzEzMDM4NTIwLCJqdGkiOiIyMmFhYmU2Ni1lNzI4LTRkNzYtODQzMi02NTM2NWYyZGE1ODAiLCJ0eXBlIjoiYWNjZXNzIiwic3ViIjoxLCJuYmYiOjE3MTMwMzg1MjAsImNzcmYiOiIxMWFiNDhmYi0yYjRjLTQwMmYtYmEyMS1iYmJkZjIwZDc0YzkiLCJleHAiOjE3MTMwMzk0MjB9.ZN7rGNZNeRx_L7VSa49STYkA8F9sOKphfnz2PHfQuZs",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/J/Downloads/test.xlsx"
						}
					]
				},
				"url": {
					"raw": "{{local_url}}/upload",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"upload"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}